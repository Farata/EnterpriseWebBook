== Test-Driven Development with JavaScript

[quote, @bphogan, http://twitter.com/bphogan/status/194856922208407552]
____

The idea: No more blog posts on Backbone.js or other JS frameworks without
showing tests. The importance of JS testing needs to be stressed here.
____

The sooner you start testing your application, the shorter the development cycle will be.It seems obvious, but many enterprises haven't adopted agile testing methodologies, which costs them dearly. 
JavaScript is dynamically typed language, which means that there is no compiler to help to identifying errors as it is in Java. To put it simply, web applications have to be tested more thoroughly.
To switch to an agile test-driven development, start with accepting the notion of em- bedding testing into your development process rather than scheduling testing after the development cycle is complete. 

The chapter starts with a brief overview of available test frameworks for JavaScript like http://qunitjs.com/[Qunit] and http://pivotal.github.com/jasmine/[Jasmine]. We will cover basic testing techniques such as "Test-driver development" and "Test First". We will show how to automate testing process in multiple browser with http://vojtajina.github.com/testacular/[Testacular] or with run test in "headless" mode with http://phantomjs.org/[PhantomJS]. We will learn how to mock and stub pieces of environment (such as `XMLHTTPRequiest` object or timer) with http://sinonjs.org/[Sinon.js] and how to Unit test DOM manipulation code.

Then, it explains how to set up a new Save Sick Child project in the IDE
using a selected test frameworks.

=== Testing Basics ===

The basic types of testing are:

- Unit
- Integration
- Functional
- Load

The sections that follow examine the differences between these testing strategies, as well as point out tools that will help you to automate the process.

==== Unit Testing 

TBD

==== Integration Testing

TBD

==== Functional Testing 

TBD

==== Load Testing 

TBD
